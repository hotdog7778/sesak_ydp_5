<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- JQuery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.0.min.js"
      integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
      crossorigin="anonymous"
    ></script>

    <!-- Axios CDN -->
    <!-- <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <title>Document</title>
  </head>
  <body>
    <h1>dynamic_form_practice</h1>

    <form action="" name="register">
      <label for="name">이름</label>
      <input type="text" id="name" name="name" />
      <br />

      성별
      <input type="radio" name="gender" id="m" value="male" />
      <label for="male">남</label>

      <input type="radio" name="gender" id="f" value="female" />
      <label for="female">여</label>
      <br />

      <button type="button" onClick="ajaxGet();">Ajax Get 제출</button>
      <button type="button" onClick="ajaxPost();">Ajax Post 제출</button>
      <button type="button" onClick="axiosGet();">Axios Get 제출</button>
      <button type="button" onClick="axiosPost();">Axios Post 제출</button>
      <button type="button" onClick="fetchGet();">Fetch Get 제출</button>
      <button type="button" onClick="fetchPost();">Fetch Post 제출</button>
    </form>

    <div class="result"></div>

    <script>
      // frontend javascript
      const resultBox = document.querySelector('div.result');

      function ajaxGet() {
        console.log('ajaxGet 함수 호출');

        const form = document.forms['register'];
        //console.log(form);
        //console.dir(form);
        //console.dir(form.name);
        //console.dir(form.name.value);
        //console.dir(form.gender);
        //console.dir(form.gender.value);

        const requestData = {
          name: form.name.value,
          gender: form.gender.value,
        };

        //Ajax로 서버에 GET 요청 보내기
        $.ajax({
          type: 'get',
          url: '/ajax',
          data: requestData,
          // success 이건 이렇게 쓰게 정해진것
          success: function (reqQueryResult) {
            resultBox.textContent = `${reqQueryResult.name} 님의  성별은 ${reqQueryResult.gender} `;
          },
        });
      }

      function ajaxPost() {
        console.log('ajaxPost 함수 호출');

        const form = document.forms['register'];

        const requestData = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: 'post',
          url: '/ajax',
          data: requestData,
          success: function (reqBodyResult) {
            resultBox.textContent = `${reqBodyResult.name} 님의  성별은 ${reqBodyResult.gender} `;
          },
        });
      }

      // function axiosGet() {
      //   // console.log('axiosGet');
      //   const form = document.forms['register'];
      //   const requestData = {
      //     name: form.name.value,
      //     gender: form.gender.value,
      //   };
      //   axios({
      //     method: 'get',
      //     url: '/axios',
      //     params: requestData,
      //   })
      //     .then(function (response) {
      //       console.log(response); // ajax와 다르게 response에 여러 데이터가 있고 data속성에 인풋데이터들이 들어있음
      //       console.log(response.data); // {name: 'tgkim', gender: 'male'} 입력값임
      //       const { name, gender } = response.data;
      //       resultBox.textContent = `${name} 님의  성별은 ${gender}`;
      //       // resultBox.textContent = `${response.data.name} 님의  성별은 ${response.data.gender}`;
      //     })
      //     .catch(function (error) {
      //       console.log('Error!!!!!!!!!', error);
      //     });
      // }

      // axios 요청 -> async/await 로 변경
      async function axiosGet() {
        const form = document.forms['register'];
        const requestData = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
          const result = await axios({
            method: 'get',
            url: '/axios',
            params: requestData,
          });
          const { name, gender } = result.data;
          resultBox.textContent = `${name} 님의  성별은 ${gender}`;
        } catch (err) {
          console.log('Error!!!!!!!!!', err);
        }
        // console.log(name);
        // console.log(gender);
      }

      // 이거 언디파인나는거 디버깅 해보기
      async function axiosPost() {
        const form = document.forms['register'];
        const requestData = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
          const result = await axios({
            method: 'post',
            url: '/axios',
            data: requestData, // POST 일때 params 말고 data 쓰는거 주의
          });
          console.log(result);
          const { name, gender } = result.data;
          console.log(name);
          resultBox.textContent = `${name} 님의  성별은 ${gender}`;
        } catch (err) {
          console.log('Error!!!!!!!!!', err);
        }
      }

      function fetchGet() {
        console.log('fetchGet 함수 호출!');

        const form = document.forms['register'];
        fetch(`/fetch?name=${form.name.value}&gender=${form.gender.value}`)
          .then((response) => {
            console.log(response);
            return response.json(); // 자바스크립트 형식으로 변환 후 리턴
          })
          .then((result) => {
            console.log(result);
            resultBox.textContent = `${result.name} 님의  성별은 ${result.gender}`;
          });
      }

      function fetchPost() {
        console.log('fetchPost 함수 호출!');

        const form = document.forms['register'];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        }; // 서버에 넘겨줄 데이터

        // fetch를 이용해 post 요청을 날릴 때에는 option 객체가 반드시 필요함!
        // 1. method 키 post 지정
        // 2. headers 키 JSON 포맷 사용 선언
        // 3. body 키 서버로 보낼 데이터
        fetch('/fetch', {
          method: 'POST',
          header: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
          // data: js obj
          // JSON.stringify(data): js obj -> json
        })
          .then((response) => {
            console.log(response);
            return response.json();
          })
          .then((response) => {
            console.log(data);
            resultBox.textContent = `POST /fetch 요청 완료!! ${data.name}님은 ${data.gender}이시죠?ㅎㅎ`;
          });
      }
    </script>
  </body>
</html>
